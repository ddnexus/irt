# uncomment if you want to use the awesome_print gem
# require 'ap'

# IRT RC file
# ITR conf options

# set this to true if your prompt get messed up when you use the history
# IRT.fix_readline_prompt = false

# will open an interactie session if a test has diffs
# IRT.irt_on_diffs = true

# will print the log tail when an interactive session is opened
# IRT.tail_on_irt = false

# the lines you want to be printed as the tail
# IRT.log.tail_size = 10

# loads irt_helper.rb files automatically
# IRT.autoload_helper_files = true

# forces tty (standard use with jruby)
# IRT.force_tty(true)

# forces color regardless the terminal ANSI support  (standard use with jruby)
# IRT.force_color(true)

# the command that should set the clipboard to the last lines from STDIN
# default to 'pbcopy' on mac, 'xclip -selection c' on linux/unix and 'clip' on windoze
# IRT.copy_to_clipboard_command = 'your command'

# the format to build the command to launch nano
# IRT.nano_command_format = %(nano +%2$d "%1$s")

# the format to build the command to launch vi
# IRT.vi_command_format = %(vi "%1$s" +%2$d)

# the format to build the command to lauch emacs
# IRT.emacs_command_format = %(emacs +%2$d "%1$s")

# the formats to build the commnd to launch your preferred IDE
# add your command format if you want to use another editor than nano or vi

# RubyMine
#IRT.edit_command_format = %(mine --line %2$s %1$s)

# Plain Eclipse on Mac X (opens the file but misses the line number)
#IRT.edit_command_format = %(open -a "/Applications/eclipse/Eclipse.app" %1$s)

# Eclipse with installed EclipseCall plugin (platform independent, file and line number ok)
# Eclipse should be running
# http://www.jaylib.org/pmwiki/pmwiki.php/EclipsePlugins/EclipseCall
# update site: http://www.jaylib.org/eclipsecall
#IRT.edit_command_format = %(java -jar eclipsecall.jar %1$s -G%2$s)

# NetBeans
#IRT.edit_command_format = %(netbeans --open %1$s:%2$s)

# the format to build the command to launch the ri tool
# if RUBY_VERSION < 1.9.2 uses qri (from fastri) else bri
# IRT.ri_command_format = %(qri -f #{Dye.color? ? 'ansi' : 'plain'} "%s")
# IRT.ri_command_format = %(bri "%s")
# for ruby >= 1.9.3 the vanilla ri is better
# IRT.ri_command_format = %(qri -f #{Dye.color? ? 'ansi' : 'bs'} "%s")

# any log-ignored-echo command you want to add
# IRT.log.ignored_echo_commands << [:commandA, :commandB ...]

# any log-ignored command you want to add (includes all the log-ignored-echo commands)
# IRT.log.ignored_commands << [:commandC, :commandD ...]

# any command that will not set the last value (includes all the log-ignored commands)
# IRT.log.non_setting_commands << [:commandE, :commandF ...]

# shows the rails log in console
# IRT.rails_log = true

# colors with :log_color (default blue) the rails log for easy reading
# IRT.dye_rails_log = true
